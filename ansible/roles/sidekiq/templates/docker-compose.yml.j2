version: "3.8"

services:
  sidekiq-{{ item.name }}:
    image: "{{ apotheca_image_name }}:{{ apotheca_image_tag }}"
    command: ["bundle", "exec", "sidekiq", {{ item.queues | map('regex_replace', '^(.*)$', '"-q", "\\1"') | join(', ') }}, "-c", "{{ item.concurrency }}"]
    deploy:
      placement:
        constraints:
          - "node.labels.sidekiq == true"
      update_config:
        order: "start-first"
        parallelism: 1
      replicas: {{ item.replicas }}
    environment:
{% if is_development == true %}
      APP_UID: ${UID:-1000}
      APP_GID: ${GID:-1000}
      MINIO_URL: "http://{{ minio.server_url }}"
{% endif %}
      DATABASE_NAME: "{{ postgres.database }}"
      DATABASE_PASSWORD: /run/secrets/database_password
      DATABASE_USER: "{{ postgres.user }}"
      DB_POOL: {{ item.concurrency }}
      APP_URL: "{{ apotheca_url }}"
      APP_IMAGE_TAG:  "{{ apotheca_image_tag }}"
      RAILS_ENV: "{{ apotheca_rails_env }}"
      REDIS_SIDEKIQ_USER: "sidekiq"
      REDIS_SIDEKIQ_PASSWORD: "{{ 'redis_sidekiq_password_v' ~ redis.versioned_configs.users_acl.users | selectattr('name', 'equalto', 'sidekiq') | map(attribute='version')  | join('') }}"
      REDIS_URL: "redis://redis:{{ redis.port }}/0"
      SOLR_URL: "{{ apotheca_solr_url }}"
      FITS_URL: "http://fits:{{ fits.port }}/fits"
    extra_hosts:
      - "{{ solr_proxy_host }}:{{ ingress_ip }}"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "ps aux | grep '[s]idekiq 7' || exit 1",
        ]
      interval: 30s
      retries: 3
      start_period: 1m
      timeout: 30s
    logging:
      driver: json-file
      options:
        max-file: "3"
        max-size: "10m"
    networks:
      - database
      - redis
      - traefik
    secrets:
      - database_password
      - source: rails_master_key
        target: "/home/app/config/credentials/{{ apotheca_rails_env }}.key"
        uid: "1000"
        gid: "1000"
        mode: 0440
      - redis_sidekiq_password
      - solr_username
      - solr_password
{% if is_development == false %}
      - honeybadger_api_key
      - aws_region
      - aws_access_key_id
      - aws_secret_access_key
      - ceph_endpoint
      - ceph_access_key_id
      - ceph_secret_access_key
      - colenda_publish_token
      - ezid_user
      - ezid_password
      - wasabi_access_key_id
      - wasabi_secret_access_key
{% endif %}
    volumes:
{% if is_development == true %}
      - /apotheca/ansible/roles/apotheca/files/src/:/home/app
{% else %}
      - app_storage:/home/app/storage
{% endif %}

networks:
  database:
    external: true
  redis:
    external: true
  traefik:
    external: true

secrets:
  database_password:
    external: true
    name: "{{ 'postgres_password_v' ~ postgres.versioned_secrets.password.version }}"
  rails_master_key:
    external: true
    name: "{{ 'apotheca_rails_master_key_v' ~ apotheca_versioned_secrets.rails_master_key.version }}"
  redis_sidekiq_password:
    external: true
    name: "{{ 'redis_sidekiq_password_v' ~ redis.versioned_configs.users_acl.users | selectattr('name', 'equalto', 'sidekiq') | map(attribute='version')  | join('') }}"
  solr_username:
    external: true
    name: "{{ 'apotheca_solr_username_v' ~ apotheca_versioned_secrets.solr_username.version }}"
  solr_password:
    external: true
    name: "{{ 'apotheca_solr_password_v' ~ apotheca_versioned_secrets.solr_password.version }}"
{% if is_development == false %}
  honeybadger_api_key:
    external: true
    name: "{{ 'apotheca_honeybadger_api_key_v' ~ apotheca_versioned_secrets.honeybadger_api_key.version }}"
  aws_region:
    external: true
    name: "{{ 'apotheca_aws_region_v' ~ apotheca_versioned_secrets.aws_region.version }}"
  aws_access_key_id:
    external: true
    name: "{{ 'apotheca_aws_access_key_id_v' ~ apotheca_versioned_secrets.aws_access_key_id.version }}"
  aws_secret_access_key:
    external: true
    name: "{{ 'apotheca_aws_secret_access_key_v' ~ apotheca_versioned_secrets.aws_secret_access_key.version }}"
  ceph_endpoint:
    external: true
    name: "{{ 'apotheca_ceph_endpoint_v' ~ apotheca_versioned_secrets.ceph_endpoint.version }}"
  ceph_access_key_id:
    external: true
    name: "{{ 'apotheca_ceph_access_key_id_v' ~ apotheca_versioned_secrets.ceph_access_key_id.version }}"
  ceph_secret_access_key:
    external: true
    name: "{{ 'apotheca_ceph_secret_access_key_v' ~ apotheca_versioned_secrets.ceph_secret_access_key.version }}"
  colenda_publish_token:
    external: true
    name: "{{ 'apotheca_colenda_publish_token_v' ~ apotheca_versioned_secrets.colenda_publish_token.version }}"
  ezid_user:
    external: true
    name: "{{ 'apotheca_ezid_user_v' ~ apotheca_versioned_secrets.ezid_user.version }}"
  ezid_password:
    external: true
    name: "{{ 'apotheca_ezid_password_v' ~ apotheca_versioned_secrets.ezid_password.version }}"
  wasabi_access_key_id:
    external: true
    name: "{{ 'apotheca_wasabi_access_key_id_v' ~ apotheca_versioned_secrets.wasabi_access_key_id.version }}"
  wasabi_secret_access_key:
    external: true
    name: "{{ 'apotheca_wasabi_secret_access_key_v' ~ apotheca_versioned_secrets.wasabi_secret_access_key.version }}"
volumes:
  app_storage:
    external: true
    name: app_storage
{% endif %}
