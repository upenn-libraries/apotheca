---
- name: Create symlink
  ansible.builtin.include_tasks: "roles/apotheca/tasks/create_symlink.yml"
  when: is_development | default (false, true)
  tags: dev_environment

- name: Create apotheca dir
  ansible.builtin.file:
    path: "{{ project_root ~ '/apotheca' }}"
    state: directory
    mode: 0440

# If is_development = true and apotheca_build_docker_image = false
# Pull existing docker image from the registry to reduce build time
- name: Pull and use docker image from registry
  block:
    # Pull registry image
    - name: Pull the image from the registry
      community.docker.docker_image:
        force_source: true
        force_tag: true
        name: "{{ apotheca_image_registry ~ ':' ~ apotheca_image_tag }}"
        repository: "{{ apotheca_image_name ~ ':' ~ apotheca_image_tag }}"
        source: pull
      when: is_development and not apotheca_build_docker_image | default (false, true)
      tags: dev_environment
  rescue:
    # An error occurred in the process of pulling the registry so build the image instead
    - name: Failed to find registry image - building image instead
      import_tasks: "build_docker_image.yml"
      when: is_development and not apotheca_build_docker_image | default (false, true)
      tags: dev_environment

# Build the docker image
- name: "Build docker image"
  import_tasks: "build_docker_image.yml"
  when: is_development and apotheca_build_docker_image | default (false, true)
  tags: dev_environment

# - name: Create versioned docker secrets
#   community.docker.docker_secret:
#     name: "{{ 'apotheca_' ~ item.key ~ '_v' ~ item.value.version }}"
#     data: "{{ item.value.value }}"
#     state: present
#   with_dict:
#     - "{{ apotheca_versioned_secrets }}"
#   tags: versioned_secrets
#   no_log: true

# Execute development env steps
- name: Deploy apotheca development environment
  community.docker.docker_stack:
    name: "apotheca"
    compose:
      - "{{ role_path ~ '/files/docker-compose.yml' }}"
      - "{{ role_path ~ '/files/docker-compose.dev.yml' }}"
    state: present
  environment:
    APP_IMAGE_NAME: "{{ apotheca_image_name }}"
    APP_IMAGE_TAG: "{{ apotheca_image_tag }}"
    APP_PORT: "{{ apotheca_port }}"
    APP_REPLICAS: "{{ apotheca_replicas }}"
    APP_URL: "{{ apotheca_url }}"
    CHROME_PORT: "{{ chrome.port }}"
    DATABASE_NAME: "{{ postgres.database }}"
    DATABASE_PASSWORD: "{{ 'postgres_password_v' ~ postgres.versioned_secrets.password.version }}"
    DATABASE_USER: "{{ postgres.user }}"
    RAILS_ENV: "{{ apotheca_rails_env }}"
    REDIS_SIDEKIQ_USER: "sidekiq"
    REDIS_SIDEKIQ_PASSWORD: "{{ 'redis_sidekiq_password_v' ~ redis.versioned_configs.users_acl.users | selectattr('name', 'equalto', 'sidekiq') | map(attribute='version')  | join('') }}"
    REDIS_PORT: "{{ redis.port }}"
    SOLR_URL: "{{ apotheca_solr_url }}"
    SOLR_TEST_URL: "{{ apotheca_solr_test_url }}"
    FITS_PORT: "{{ fits.port }}"
    MINIO_PORT: "{{ minio.port }}"
  changed_when: false
  no_log: true
  when: is_development | default (false, true)
  tags: dev_environment

# Execute staging/production steps
- name: Copy docker-compose file
  ansible.builtin.copy:
    src: "files/docker-compose.yml"
    dest: "{{ project_root ~ '/apotheca/' }}"
    mode: 0440
  when: not is_development | default (false, true)

# Execute staging/production env steps
- name: Deploy apotheca
  community.docker.docker_stack:
    name: "apotheca"
    compose:
      - "{{ project_root ~ '/apotheca/docker-compose.yml' }}"
    state: present
  environment:
    APP_IMAGE_NAME: "{{ apotheca_image_name }}"
    APP_IMAGE_TAG: "{{ apotheca_image_tag }}"
    APP_PORT: "{{ apotheca_port }}"
    APP_REPLICAS: "{{ apotheca_replicas }}"
    APP_URL: "{{ apotheca_url }}"
    DATABASE_NAME: "{{ postgres.database }}"
    DATABASE_PASSWORD: "{{ 'postgres_password_v' ~ postgres.versioned_secrets.password.version }}"
    DATABASE_USER: "{{ postgres.user }}"
    RAILS_ENV: "{{ apotheca_rails_env }}"
    REDIS_SIDEKIQ_USER: "sidekiq"
    REDIS_SIDEKIQ_PASSWORD: "{{ 'redis_sidekiq_password_v' ~ redis.versioned_configs.users_acl.users | selectattr('name', 'equalto', 'sidekiq') | map(attribute='version')  | join('') }}"
    REDIS_PORT: "{{ redis.port }}"
    SOLR_URL: "{{ apotheca_solr_url }}"
    FITS_PORT: "{{ fits.port }}"
  changed_when: false
  no_log: true
  when: not is_development | default (false, true)

- name: Recursively remove project directory
  ansible.builtin.file:
    path: "{{ apotheca_repo_src_path }}"
    state: absent
  when: not is_development | default (false, true)
